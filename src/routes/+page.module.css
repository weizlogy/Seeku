:root {
  --bg: #121212;
  --item-bg: rgba(255, 255, 255, 0.04);
  --item-selected: rgba(255, 255, 255, 0.3);
  --border-color: rgba(255, 255, 255, 0.2);
  --accent: #6c63ff;
  --text-color: #333333;
}
:global(html), :global(body) {
  overflow: hidden; /* ウィンドウ全体のスクロールバーはバイバイ！ (´；ω；｀)ﾉｼ */
  min-height: 100%; /* 最低でも親要素の高さ（htmlならビューポート）を確保するよ！ */
  height: auto;     /* 中身が多ければ、それに合わせて自分も伸びるように！ */
  background: transparent !important; /* htmlの背景も透明にな～れ！ (人∀・)ﾀﾉﾑ */
  margin: 0;
  padding: 0;
  font-family: 'M PLUS 1 Code', monospace;
  font-weight: bold;
}
main {
  text-align: center;
  margin: 0 auto;
  padding: 0.5em 0.25em;
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* 最低でも画面の高さいっぱいに広がるようにするよ！ */
  height: auto;       /* 中身が多ければ、それに合わせてmain自体も伸びるように！ */
  /* overflow-y: auto; は削除！これでmainのスクロールバーは出なくなるはず！ */
  position: relative; /* ::before 擬似要素を配置するために必要だよ！ */
  /* background-color: transparent !important; */ /* インラインスタイルで背景色と透明度を設定するよ！ */
  box-sizing: border-box; /* パディングとかボーダーも高さに含めるよ！ */
}
.search-container {
  display: inline-block;
  margin-top: 0.25em;
  vertical-align: middle;
  text-align: left;
  background-color: transparent; /* 検索コンテナも透明に！ */
}

input {
  flex-grow: 1;
  padding: 0.3em 0.5em;
  line-height: normal; /* これで上下のバランスが良くなるかも！ */
  font-size: 1em; /* フォントサイズもちゃんと指定しとこ！ */
  border: none; /* 枠線、バイバイ！ (´；ω；｀)ﾉｼ */
  outline: none; /* フォーカスしたときの枠線も消しちゃえ！ */
  background-color: transparent; /* 入力欄も透明にな～れ！ */
  width: -webkit-fill-available; /* 幅の最大化 */
  min-width: 0; /* これがないと fill-available が効かないことがあるらしい？ */
  font-family: inherit;
  color: var(--text-color); /* 入力文字の色も忘れずに！ */
  transition: background-color 0.2s ease-in-out; /* 背景色がふわっと変わるように！ */
}
input::placeholder {
  color: #aaa; /* プレースホルダーの色もちょっと調整！ */
  opacity: 0.7;
}
/* isLoadingMore が true の時に main に付与されるクラスのスタイルだよ！ */
/* この main-loading は Svelte 側で main タグに直接クラス名を指定するので、:global は不要 */
:global(main.main-loading)::before { /* main タグに直接クラスを付与するので、:global() で囲むか、Svelte側で styles.main-loading を使う */
  content: "";
  position: absolute; /* main 要素に対して絶対配置 */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3); /* 全体を少し暗くするオーバーレイ！ */
  z-index: 50; /* loading-message よりは奥、他のUIよりは手前になるように調整 */
  pointer-events: none; /* このオーバーレイがクリックとかの邪魔をしないようにね！ */
}
.message {
  color: #555;
  margin: 0.25em 0;
  text-align: left; /* メッセージが多くなってきたら左揃えの方が見やすいよね！ */
  margin-left: 10px; /* 左側にちょっと余白を追加！ */
  white-space: pre-wrap; /* ← コレコレ！これで改行が効くようになるはず！ */
  background-color: transparent; /* メッセージも透明に！ */
}
/* ★★★ ヘルプ表示の時に .message 要素に付与するクラス ★★★ */
.message-as-help-scroll {
  /* ヘルプエリアの高さの指定だよ！ */
  min-height: 300px; /* まず、最低でもこの高さを確保するようにしてみるね！ */
  height: 300px;     /* 基本の高さも引き続き指定しておくよ！ */
  overflow: hidden; /* はみ出たテキストは隠す！これが大事！ */
  /* border: 1px solid var(--border-color); */ /* 必要なら枠線とか */
  position: relative; /* 中の .help-scroll-inner-text を動かす基準になるよ */
  /* 通常の .message のスタイルを上書きしたり、追加したり */
  padding: 0.5em; /* 内側の余白は維持したいかな？ */
  margin: 0.25em 0.5em; /* 周りの余白も維持 */
  box-sizing: border-box;
  flex-shrink: 0; /* もし親がflexコンテナだった場合に、この要素が縮まないようにするおまじない！ */
}
/* ★★★ ヘルプのテキストを実際に表示して動かす内側の要素 ★★★ */
.help-scroll-inner-text {
  position: absolute; /* 親要素(.message-as-help-scroll)に対して絶対配置 */
  top: 0;
  left: 0;
  right: 0; /* 横幅いっぱいに広がるように right も指定 */
  /* width: 100%; だと、padding がある場合に計算がズレることがあるので left/right で指定 */
  white-space: pre-wrap; /* 改行をちゃんと表示！ */
  line-height: 18px; /* JS側の HELP_LINE_HEIGHT_PX と合わせようね！ */
  transition: transform 0.05s ease-out; /* スルスル動くようにちょっとアニメーション！ */
  /* transform: translateY(0px); JSでここを操作するよ！ */
}
.results-list-scroll-container { /* 新しいスクロールコンテナ用のスタイル！ */
  list-style: none;
  padding: 0;
  text-align: left;
  background-color: transparent;
}
.results-list-scroll-container::-webkit-scrollbar { display: none; }
.results-list-scroll-container {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.item:last-child { border-bottom: none; }
.item.selected {
  outline: 2px solid var(--item-selected); /* outlineに戻すよ！ */
  outline-offset: -2px; /* そして、アウトラインを2px内側にオフセット！これでどうだ！ ✨ */
}
.item {
  font-family: inherit; /* 親要素のフォントを継承するよ！ */
  height: 35px; /* ←itemHeightと完全一致させる！ */
  display: flex; /* アイコンとテキストエリアを横に並べるためにflexコンテナにするよ！ */
  flex-direction: row; /* 横並びに変更！ ✨ */
  align-items: center; /* アイコンとテキストエリアを縦方向中央に揃える！ */
  /* justify-content はデフォルトの flex-start でOK (左寄せ) */
  padding: 2px 0.5em; /* 上下にも少しパディング、左右はそのまま */
  color: var(--text-color);
  border-radius: 4px;
  transition: background-color 0.2s ease, transform 0.1s ease;
  border: 1px solid transparent;
  margin-left: 3px; /* 左右の余白を均等に近づける！ */
  margin-right: 3px; /* 右にも同じだけ余白を追加！ */
  box-sizing: border-box; /* パディングやボーダーも高さに含める！ */
  overflow: hidden; /* 中身がはみ出たら隠す！ (item-pathのellipsisのため) */
}
.item-name {
  display: block; /* これでwidth: 100%が効きやすくなるはず！ */
  font-size: 0.9em; /* 少しだけ小さくしてバランス調整 */
  line-height: 1.3; /* 行間を少し詰める */
  white-space: nowrap; /* 名前も長すぎたら省略 */
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%; /* 省略表示が効くように */
}
.item-path {
  display: block; /* これも！ */
  font-size: 0.7em; /* パスはかなり小さく！ */
  color: #777; /* 色も薄めに */
  line-height: 1.2; /* こちらも行間詰める */
  white-space: nowrap; /* 1行で表示してはみ出たら省略 */
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%; /* 省略表示が効くように */
}
.item-icon-area {
  width: 20px; /* アイコン表示エリアの幅を固定 */
  height: 100%; /* 親要素の高さに合わせる */
  display: flex;
  align-items: center; /* アイコンを上下中央に */
  justify-content: center; /* アイコンを左右中央に */
  margin-right: 5px; /* テキストとの間に少し余白 */
  flex-shrink: 0; /* コンテナが縮んでもアイコンエリアは縮まないように！ */
}
.item-text-area {
  flex-grow: 1; /* 残りのスペースを全部使う！ */
  display: flex;
  flex-direction: column; /* 名前とパスを縦に並べる */
  justify-content: center; /* 縦方向の中央揃え */
  overflow: hidden; /* ここでもはみ出しは隠す！ (item-name, item-path の ellipsis のため) */
}
.item.selected {
  background-color: var(--item-selected);
  border-color: var(--border-color);
  transform: scale(1.02);
}
.position-info {
  font-size: 0.75em; /* かなり小さく！ */
  color: #999; /* ちょっと薄めのグレーで控えめに */
  text-align: right; /* 右寄せ！ */
  margin: 1px 0.5em 0px 0.5em; /* 上にほんの少し、左右は他のメッセージと合わせる感じで、下はなし！ */
  line-height: 1.2; /* 行間も詰めてコンパクトに！ */
  padding: 0;
  height: 1em; /* 高さを固定して、表示/非表示でガタつかないようにするおまじない！ */
  position: absolute;
  right: 0px;
  bottom: 5px;
}
.overflow-message {
  color: #888;
  font-size: 0.9em;
  margin: 1px 0.5em 0.25em 0.5em; /* position-info との縦マージンを調整！ */
  background-color: transparent; /* はみだしメッセージも透明に！ */
}
.loading-message {
  /* 「検索中...」のメッセージを、検索バーの下あたりに浮かせて表示するよ！ */
  position: absolute;
  left: 50%; /* 画面の左右中央に配置 */
  /* 検索ボックスの垂直中央にメッセージの中心が来るようにするよ！ */
  /* mainのpadding-top(-0.5em) + search-containerのmargin-top(0.25em) + inputの高さ(font-size 1em + padding 0.3em*2 = 1.6em)の半分(0.8em) */
  top: calc(-0.5em + 0.25em + (1em + 0.3em * 2) / 2);
  transform: translate(-50%, -50%); /* X方向とY方向の中心に来るように！ */
  background-color: var(--item-bg); /* 背景を少しつけて、文字を読みやすくするよ */
  border: 1px solid var(--border-color); /* 枠線もちょっとだけ */
  border-radius: 6px; /* 角を丸くして、かわいく！ */
  padding: 8px 12px;
  color: var(--text-color); /* テキストカラーは変数を使うと統一感でるね！ */
  text-align: center;
  font-style: italic;
  z-index: 100; /* オーバーレイよりも手前に表示！ */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2); /* ちょっとリッチに影もつけちゃう！ */
  white-space: nowrap; /* メッセージが途中で改行されないようにするね */
  opacity: 1; /* 前は0.8だったけど、しっかり見えるように1に戻すよ！ */
}
